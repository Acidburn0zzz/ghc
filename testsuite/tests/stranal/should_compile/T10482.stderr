
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 171, types: 116, coercions: 15, joins: 1/1}

-- RHS size: {terms: 13, types: 14, coercions: 4, joins: 0/0}
T10482.$WFooPair [InlPrag=INLINE[2]] :: forall a b. Foo a -> Foo b -> Foo (a, b)
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a) (@ b) (dt [Occ=Once] :: Foo a[sk:1]) (dt [Occ=Once] :: Foo b[sk:1]) ->
                 (case dt of dt { __DEFAULT -> case dt of dt { __DEFAULT -> T10482.FooPair @ a @ b dt dt } })
                 `cast` (Sym (T10482.D:R:Foo(,)0[0] <a>_N <b>_N) :: (T10482.R:Foo(,) a b :: *) ~R# (Foo (a, b) :: *))}]
T10482.$WFooPair
  = \ (@ a) (@ b) (dt [Occ=Once] :: Foo a[sk:1]) (dt [Occ=Once] :: Foo b[sk:1]) ->
      (case dt of dt { __DEFAULT -> case dt of dt { __DEFAULT -> T10482.FooPair @ a @ b dt dt } })
      `cast` (Sym (T10482.D:R:Foo(,)0[0] <a>_N <b>_N) :: (T10482.R:Foo(,) a b :: *) ~R# (Foo (a, b) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T10482.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T10482.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T10482.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10482.$trModule3 = GHC.Types.TrNameS T10482.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T10482.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T10482.$trModule2 = "T10482"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T10482.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10482.$trModule1 = GHC.Types.TrNameS T10482.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T10482.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
T10482.$trModule = GHC.Types.Module T10482.$trModule3 T10482.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1]
$krep = GHC.Types.KindRepTyConApp GHC.Types.$tcInt (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2]
$krep1 = GHC.Types.KindRepVar 1#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2]
$krep2 = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep3 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2]
$krep3 = GHC.Types.: @ GHC.Types.KindRep $krep1 (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep4 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2]
$krep4 = GHC.Types.: @ GHC.Types.KindRep $krep2 $krep3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1]
$krep5 = GHC.Types.KindRepTyConApp GHC.Tuple.$tc(,) $krep4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T10482.$tcFoo2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T10482.$tcFoo2 = "Foo"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T10482.$tcFoo1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10482.$tcFoo1 = GHC.Types.TrNameS T10482.$tcFoo2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
T10482.$tcFoo :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
T10482.$tcFoo = GHC.Types.TyCon 3311038889639791302## 7944995683507700778## T10482.$trModule T10482.$tcFoo1 0# GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep6 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2]
$krep6 = GHC.Types.: @ GHC.Types.KindRep $krep2 (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1]
$krep7 = GHC.Types.KindRepTyConApp T10482.$tcFoo $krep6

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1]
$krep8 = GHC.Types.KindRepTyConApp T10482.$tcFoo $krep3

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep9 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2]
$krep9 = GHC.Types.: @ GHC.Types.KindRep $krep5 (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep10 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1]
$krep10 = GHC.Types.KindRepTyConApp T10482.$tcFoo $krep9

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4]
$krep11 = GHC.Types.KindRepFun $krep8 $krep10

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'FooPair1 [InlPrag=[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4]
T10482.$tc'FooPair1 = GHC.Types.KindRepFun $krep7 $krep11

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep12 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2]
$krep12 = GHC.Types.: @ GHC.Types.KindRep $krep (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep13 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1]
$krep13 = GHC.Types.KindRepTyConApp T10482.$tcFoo $krep12

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'Foo1 [InlPrag=[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4]
T10482.$tc'Foo1 = GHC.Types.KindRepFun $krep $krep13

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'FooPair3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T10482.$tc'FooPair3 = "'FooPair"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'FooPair2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10482.$tc'FooPair2 = GHC.Types.TrNameS T10482.$tc'FooPair3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'FooPair :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
T10482.$tc'FooPair
  = GHC.Types.TyCon 5329411373903054066## 1455261321638291317## T10482.$trModule T10482.$tc'FooPair2 2# T10482.$tc'FooPair1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'Foo3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T10482.$tc'Foo3 = "'Foo"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'Foo2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10482.$tc'Foo2 = GHC.Types.TrNameS T10482.$tc'Foo3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
T10482.$tc'Foo :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
T10482.$tc'Foo = GHC.Types.TyCon 5096937192618987042## 15136671864408054946## T10482.$trModule T10482.$tc'Foo2 0# T10482.$tc'Foo1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl :: Int
[GblId, Caf=NoCafRefs, Str=m]
lvl = GHC.Types.I# 0#

-- RHS size: {terms: 38, types: 36, coercions: 11, joins: 1/1}
foo [InlPrag=INLINE[0]] :: Foo ((Int, Int), Int) -> Int -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S(S)L)L),1*U(U(U(U),A),A)><S(S),1*U(1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w [Occ=Once] :: Foo ((Int, Int), Int)) (w1 [Occ=Once!] :: Int) ->
                 case w
                      `cast` (T10482.D:R:Foo(,)0[0] <(Int, Int)>_N <Int>_N :: (Foo ((Int, Int), Int) :: *) ~R# (T10482.R:Foo(,) (Int, Int) Int :: *))
                 of
                 { FooPair ww1 [Occ=Once] _ [Occ=Dead] ->
                 case ww1 `cast` (T10482.D:R:Foo(,)0[0] <Int>_N <Int>_N :: (Foo (Int, Int) :: *) ~R# (T10482.R:Foo(,) Int Int :: *)) of
                 { FooPair ww4 [Occ=Once] _ [Occ=Dead] ->
                 case ww4 `cast` (T10482.D:R:FooInt0[0] ; T10482.N:R:FooInt[0] :: (Foo Int :: *) ~R# (Int :: *)) of { GHC.Types.I# ww7 [Occ=Once] ->
                 case w1 of { GHC.Types.I# ww9 [Occ=Once] ->
                 joinrec {
                   $wfoo [InlPrag=[0], Occ=LoopBreakerT[2]] :: GHC.Prim.Int# -> GHC.Prim.Int# -> Int
                   [LclId[JoinId(2)], Arity=2, Str=<L,U><S,1*U>m, Unf=OtherCon []]
                   $wfoo (ww10 [Occ=Once*] :: GHC.Prim.Int#) (ww11 [Occ=Once!] :: GHC.Prim.Int#)
                     = case ww11 of wild {
                         __DEFAULT ->
                           case GHC.Prim.remInt# wild 2# of {
                             __DEFAULT -> GHC.Types.I# ww10;
                             0# -> jump $wfoo ww10 (GHC.Prim.-# wild 1#)
                           };
                         0# -> GHC.Types.I# 0#
                       }; } in
                 jump $wfoo ww7 ww9
                 }
                 }
                 }
                 }}]
foo
  = \ (w :: Foo ((Int, Int), Int)) (w1 :: Int) ->
      case w
           `cast` (T10482.D:R:Foo(,)0[0] <(Int, Int)>_N <Int>_N :: (Foo ((Int, Int), Int) :: *) ~R# (T10482.R:Foo(,) (Int, Int) Int :: *))
      of
      { FooPair ww1 ww2 ->
      case ww1 `cast` (T10482.D:R:Foo(,)0[0] <Int>_N <Int>_N :: (Foo (Int, Int) :: *) ~R# (T10482.R:Foo(,) Int Int :: *)) of
      { FooPair ww4 ww5 ->
      case ww4 `cast` (T10482.D:R:FooInt0[0] ; T10482.N:R:FooInt[0] :: (Foo Int :: *) ~R# (Int :: *)) of { GHC.Types.I# ww7 ->
      case w1 of { GHC.Types.I# ww9 ->
      joinrec {
        $wfoo [InlPrag=[0], Occ=LoopBreaker] :: GHC.Prim.Int# -> GHC.Prim.Int# -> Int
        [LclId[JoinId(2)], Arity=2, Str=<L,U><S,1*U>m, Unf=OtherCon []]
        $wfoo (ww10 :: GHC.Prim.Int#) (ww11 :: GHC.Prim.Int#)
          = case ww11 of wild {
              __DEFAULT ->
                case GHC.Prim.remInt# wild 2# of {
                  __DEFAULT -> GHC.Types.I# ww10;
                  0# -> jump $wfoo ww10 (GHC.Prim.-# wild 1#)
                };
              0# -> lvl
            }; } in
      jump $wfoo ww7 ww9
      }
      }
      }
      }



