
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 67, types: 42, coercions: 0, joins: 1/1}

Rec {
-- RHS size: {terms: 4, types: 4, coercions: 0, joins: 0/0}
T13143.$wf [InlPrag=NOINLINE, Occ=LoopBreaker]
  :: forall a. GHC.Prim.Void# -> a
[GblId, Arity=1, Caf=NoCafRefs, Str=<B,A>b]
T13143.$wf = \ (@ a) _ [Occ=Dead] -> T13143.$wf @ a GHC.Prim.void#
end Rec }

-- RHS size: {terms: 4, types: 4, coercions: 0, joins: 0/0}
f [InlPrag=INLINE[0]] :: forall a. Int -> a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<B,A>b,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a) _ [Occ=Dead] -> T13143.$wf @ a GHC.Prim.void#}]
f = \ (@ a) _ [Occ=Dead] -> T13143.$wf @ a GHC.Prim.void#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T13143.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T13143.$trModule3 = GHC.Types.TrNameS T13143.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T13143.$trModule2 = "T13143"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T13143.$trModule1 = GHC.Types.TrNameS T13143.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
T13143.$trModule
  = GHC.Types.Module T13143.$trModule3 T13143.$trModule1

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
T13143.g1 :: Int
[GblId, Str=b]
T13143.g1 = T13143.$wf @ Int GHC.Prim.void#

-- RHS size: {terms: 39, types: 15, coercions: 0, joins: 1/1}
g [InlPrag=INLINE[0]] :: Bool -> Bool -> Int -> Int
[GblId,
 Arity=3,
 Str=<S,1*U><S,1*U><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w [Occ=Once] :: Bool)
                 (w1 [Occ=Once] :: Bool)
                 (w2 [Occ=Once!] :: Int) ->
                 case w2 of { GHC.Types.I# ww1 [Occ=Once] ->
                 joinrec {
                   $wg [InlPrag=[0], Occ=LoopBreakerT[3]]
                     :: Bool -> Bool -> GHC.Prim.Int# -> Int
                   [LclId[JoinId(3)],
                    Arity=3,
                    Str=<S,1*U><S,1*U><S,U>m,
                    Unf=OtherCon []]
                   $wg (w3 [Occ=Once!] :: Bool)
                       (w4 [Occ=Once*!] :: Bool)
                       (ww2 [Occ=Once*] :: GHC.Prim.Int#)
                     = case w3 of {
                         False ->
                           case w4 of {
                             False -> jump $wg GHC.Types.False GHC.Types.True ww2;
                             True -> GHC.Types.I# (GHC.Prim.+# ww2 1#)
                           };
                         True ->
                           case w4 of {
                             False -> jump $wg GHC.Types.True GHC.Types.True ww2;
                             True -> T13143.g1
                           }
                       }; } in
                 jump $wg w w1 ww1
                 }}]
g = \ (w :: Bool) (w1 :: Bool) (w2 :: Int) ->
      case w2 of { GHC.Types.I# ww1 ->
      joinrec {
        $wg [InlPrag=[0], Occ=LoopBreaker]
          :: Bool -> Bool -> GHC.Prim.Int# -> Int
        [LclId[JoinId(3)],
         Arity=3,
         Str=<S,1*U><S,1*U><S,U>m,
         Unf=OtherCon []]
        $wg (w3 :: Bool) (w4 :: Bool) (ww2 :: GHC.Prim.Int#)
          = case w3 of {
              False ->
                case w4 of {
                  False -> jump $wg GHC.Types.False GHC.Types.True ww2;
                  True -> GHC.Types.I# (GHC.Prim.+# ww2 1#)
                };
              True ->
                case w4 of {
                  False -> jump $wg GHC.Types.True GHC.Types.True ww2;
                  True -> T13143.g1
                }
            }; } in
      jump $wg w w1 ww1
      }



