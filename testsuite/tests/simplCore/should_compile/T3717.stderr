
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 35, types: 15, coercions: 0, joins: 1/1}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T3717.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T3717.$trModule3 = GHC.Types.TrNameS T3717.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T3717.$trModule2 = "T3717"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T3717.$trModule1 = GHC.Types.TrNameS T3717.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
T3717.$trModule
  = GHC.Types.Module T3717.$trModule3 T3717.$trModule1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3717.foo1 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T3717.foo1 = GHC.Types.I# 0#

-- RHS size: {terms: 17, types: 7, coercions: 0, joins: 1/1}
foo :: Int -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds [Occ=Once] :: Int) ->
                 joinrec {
                   foo2 [Occ=LoopBreakerT[1]] :: Int -> Int
                   [LclId[JoinId(1)], Arity=1, Unf=OtherCon []]
                   foo2 (ds1 [Occ=Once!] :: Int)
                     = case ds1 of { GHC.Types.I# ds2 [Occ=Once!] ->
                       case ds2 of ds3 {
                         __DEFAULT -> jump foo2 (GHC.Types.I# (GHC.Prim.-# ds3 1#));
                         0# -> T3717.foo1
                       }
                       }; } in
                 jump foo2 ds}]
foo
  = \ (ds :: Int) ->
      case ds of { GHC.Types.I# ww1 ->
      joinrec {
        $wfoo [InlPrag=[0], Occ=LoopBreaker] :: GHC.Prim.Int# -> Int
        [LclId[JoinId(1)], Arity=1, Str=<S,1*U>m, Unf=OtherCon []]
        $wfoo (ww2 :: GHC.Prim.Int#)
          = case ww2 of ds1 {
              __DEFAULT -> jump $wfoo (GHC.Prim.-# ds1 1#);
              0# -> T3717.foo1
            }; } in
      jump $wfoo ww1
      }



