
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 68, types: 43, coercions: 0, joins: 1/1}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T4908.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T4908.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T4908.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T4908.$trModule3 = GHC.Types.TrNameS T4908.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T4908.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T4908.$trModule2 = "T4908"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T4908.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T4908.$trModule1 = GHC.Types.TrNameS T4908.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T4908.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
T4908.$trModule
  = GHC.Types.Module T4908.$trModule3 T4908.$trModule1

-- RHS size: {terms: 44, types: 22, coercions: 0, joins: 1/1}
T4908.$wf [InlPrag=[0]] :: Int# -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U(A,1*U(1*U))>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 20] 118 20}]
T4908.$wf
  = \ (ww :: Int#) (w :: (Int, Int)) ->
      joinrec {
        $s$wf [Occ=LoopBreaker] :: Int -> Int# -> Int# -> Bool
        [LclId[JoinId(3)],
         Arity=3,
         Str=<L,A><L,1*U><S,1*U>,
         Unf=OtherCon []]
        $s$wf (sc :: Int) (sc1 :: Int#) (sc2 :: Int#)
          = case sc2 of ds {
              __DEFAULT ->
                case sc1 of ds1 {
                  __DEFAULT -> jump $s$wf sc ds1 (-# ds 1#);
                  0# -> GHC.Types.True
                };
              0# -> GHC.Types.True
            }; } in
      case ww of ds {
        __DEFAULT ->
          case w of { (a, b) ->
          case b of { I# ds1 ->
          case ds1 of ds2 {
            __DEFAULT -> jump $s$wf a ds2 (-# ds 1#);
            0# -> GHC.Types.True
          }
          }
          };
        0# -> GHC.Types.True
      }

-- RHS size: {terms: 8, types: 6, coercions: 0, joins: 0/0}
f [InlPrag=INLINE[0]] :: Int -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(A,1*U(1*U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w [Occ=Once!] :: Int) (w1 [Occ=Once] :: (Int, Int)) ->
                 case w of { I# ww1 [Occ=Once] -> T4908.$wf ww1 w1 }}]
f = \ (w :: Int) (w1 :: (Int, Int)) ->
      case w of { I# ww1 -> T4908.$wf ww1 w1 }



